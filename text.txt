const crypto = require('crypto');

// Generate a random encryption key
const generateEncryptionKey = () => {
  return crypto.randomBytes(32).toString('hex'); // 32 bytes (256 bits) for AES-256 encryption
};

// Example usage:
const encryptionKey = generateEncryptionKey();
console.log(encryptionKey);


const createEncryptedToken = (tokenPayload, encryptionKey, expiresIn = '7d') => {
  // Specify the algorithm and encryption key for encryption
  const options = {
    algorithm: 'dir', // Direct encryption with a symmetric key
    expiresIn,
    header: {
      typ: 'JWT', // Type of token
      enc: 'A256GCM', // Encryption algorithm (AES-256-GCM)
    },
  };

  // Create the encrypted token
  const token = jwt.sign(tokenPayload, encryptionKey, options);

  return token;
};

// Example usage:
const tokenPayload = {
  firstName: 'Katy',
  lastName: 'Parry',
  email: 'katy@parry.com',
};

const encryptionKey = 'your_encryption_key'; // Replace with your own encryption key
const encryptedToken = createEncryptedToken(tokenPayload, encryptionKey);
console.log(encryptedToken);